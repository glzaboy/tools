#!/bin/sh
if [ $# -eq 0 ]
then
	echo "Usage: $0 -p user:project [-r] [-d JMXPORT]"
	exit 128
fi
while getopts  :p:u:r OPTION; do

    case $OPTION in
        p)
 	    PROJECT=$(echo "$OPTARG" | sed 's/\.git$//');
        ;;
	u)
	    GITUSER=$(echo "$OPTARG");
	;;
        r)
            RESET="1";
        ;;
        ?)
            echo "illegal option $OPTION $OPTARG"
            exit 128;;

    esac;
done
fetchgit -p $PROJECT -u $GITUSER -l buildjava
FETCH_RET=$?
if [[ ${FETCH_RET:-0} != 0 ]] ; then
	echo "FETCH失败，返回码${FETCH_RET:-0}"
	exit ${FETCH_RET}
fi
ROOT_PATH=$(env|grep HOME|awk -F '='   '{print $2}')"/buildjava"
PROJECTFIXED="${PROJECT}.git"


if [[ ! -f "$ROOT_PATH/${GITUSER}/${PROJECTFIXED}/pom.xml" ]] ;then
    echo "未检测到pom.xml,目前只支持maven项目编译"
    echo "$ROOT_PATH/${GITUSER}/${PROJECTFIXED}/pom.xml不存在"
    exit;
fi

echo "工作目录${ROOT_PATH}"
echo "切换到目录${GITUSER}/${PROJECTFIXED}"

cd "$ROOT_PATH/${GITUSER}/${PROJECTFIXED}"
if [[ $RESET == "1" ]] ; then
        echo "清理项目"
        mvn clean
fi
if [[ -f "$ROOT_PATH/${GITUSER}/$PROJECTFIXED/project.properties" ]] ; then
    INSTALL=$(cat project.properties|awk -F "=" '{print $2}')
else
    INSTALL=0;
fi

if [[ $INSTALL  == 1 ]] ; then
    echo "安装到maven"
    mvn install
else
    echo "编译项目"
    mvn clean
    mvn package
    cd target
fi
